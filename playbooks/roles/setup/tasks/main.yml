- name: Configure void mirror
  ansible.builtin.template:
    src: "{{ role_path }}/templates/00-repository-main.conf.j2"
    dest: "/etc/xbps.d/00-repository-main.conf"
    mode: "0644"
    owner: root
    group: root

- name: Update mirrors
  shell: "xbps-install -Syu"

- name: Install system services
  shell: "xbps-install -Sy {{ ' '.join(pkgs) }}"
  vars:
    pkgs: {{ system_pkgs }}

- name: Enable system services
  ansible.builtin.file:
    src: "/etc/sv/{{ item }}"
    dest: "/etc/runit/runsvdir/current/{{ item }}"
    state: link
  with_items:
    - sshd
    - cronie
    - rpcbind
    - statd
    - nfs-server
    - socklog-unix
    - nanoklogd
    - snapperd
    - dbus
    - elogind
    - grub-btrfs
    - tailscaled

- name: Create service directories
  ansible.builtin.file:
    path: "/etc/sv/{{ item.name }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: "{{ item.enabled }}"
  with_items: "{{ services }}"

- name: Create service logger directories 
  ansible.builtin.file:
    path: "/etc/sv/{{ item.name }}/log"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: "{{ item.enabled }}"
  with_items: "{{ services }}"

- name: Install service templates
  ansible.builtin.template:
    src: "{{ role_path }}/templates/sv/{{ item.name }}/run.j2"
    dest: "/etc/sv/{{ item.name }}/run"
    mode: 0750
    owner: root
    group: root
  when: "{{ item.enabled }}"
  with_items: "{{ services }}"

- name: Install service templates
  ansible.builtin.template:
    src: "{{ role_path }}/templates/sv/{{ item.name }}/log/run.j2"
    dest: "/etc/sv/{{ item.name }}/log/run"
    mode: 0750
    owner: root
    group: root
  when: "{{ item.enabled }}"
  with_items: "{{ services }}"

- name: Enable service
  ansible.builtin.file:
    src: "/etc/sv/{{ item.name }}"
    dest: "/etc/runit/runsvdir/current/{{ item.name }}"
    state: link
  when: "{{ item.enabled }}"
  with_items: "{{ services }}"

- name: Root ssh keys
  community.crypto.openssh_keypair:
    path: /root/.ssh/id_rsa
    force: true
  register: keygen

- name: Write public key to authorized_keys
  ansible.builtin.copy:
    content: "{{ keygen.public_key }}"
    dest: /root/.ssh/authorized_keys
    mode: "0644"
    owner: root
    group: root

- name: Scan locahost ssh keys
  shell: "ssh-keyscan localhost"
  register: "keyscan"

- name: Write known_hosts
  ansible.builtin.copy:
    content: "{{ keyscan.stdout }}"
    dest: /root/.ssh/known_hosts
    mode: "0644"
    owner: root
    group: root
